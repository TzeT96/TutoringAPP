"use strict";(()=>{var e={};e.id=1755,e.ids=[1755],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,i){return i in t?t[i]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,i)):"function"==typeof t&&"default"===i?t:void 0}}})},5675:(e,t,i)=>{i.r(t),i.d(t,{config:()=>d,default:()=>l,routeModule:()=>m});var n={};i.r(n),i.d(n,{default:()=>o});var s=i(1802),r=i(7153),a=i(6249),u=i(8438);async function o(e,t){if("GET"!==e.method)return t.status(405).json({error:"Method not allowed"});try{let e=await u.Z.submissionDetail.findMany(),i=await u.Z.assignmentGeneralInfo.findMany();if(0===e.length||0===i.length)return t.json([]);let n=new Map;for(let t of(i.forEach(t=>{let i=t.course_code||"";n.has(i)||n.set(i,{id:i,code:i,name:i,semester:"Current",studentCount:0,assignments:[],students:[],highRiskCount:0,averageGrade:void 0});let s=e.filter(e=>e.assignment_id===t.id).map(e=>{let t=null;try{t="string"==typeof e.submission_detection_result?JSON.parse(e.submission_detection_result):e.submission_detection_result}catch(e){return console.error("Error parsing detection result:",e),null}if(!t)return null;let i="cleared";t.ai_probability>=.8?i="confirmed":t.ai_probability>=.6&&(i="suspected");let n=Math.round(100*t.ai_probability);return{studentId:t.student_email,studentName:t.student_name,studentEmail:t.student_email,score:0,submissionDate:e.submission_time||new Date,plagiarismStatus:i,similarityScore:n,verificationQuestions:t.verification_questions,canvasUrl:t.canvas_url,requiresVerification:1===t.requires_verification}}).filter(e=>null!==e),r={id:t.id.toString(),title:t.assignment_name||"",type:"assignment",dueDate:t.due_date||new Date,totalPoints:100,studentResults:s},a=n.get(i);a&&a.assignments.push(r)}),Array.from(n.values()))){let e=new Set,i=0;t.assignments.forEach(t=>{t.studentResults.forEach(t=>{e.add(t.studentEmail),("suspected"===t.plagiarismStatus||"confirmed"===t.plagiarismStatus)&&i++})}),t.studentCount=e.size,t.highRiskCount=i,t.averageGrade=void 0,t.students=Array.from(e).map(e=>{let i=t.assignments.flatMap(e=>e.studentResults).filter(t=>t.studentEmail===e),n=i[i.length-1];return{id:e,name:n?.studentName||"Unknown Student",email:e,status:n?.requiresVerification?"requires_verification":"active",riskLevel:i.some(e=>"confirmed"===e.plagiarismStatus)?"high":i.some(e=>"suspected"===e.plagiarismStatus)?"medium":"low"}})}let s=Array.from(n.values());return t.json(s)}catch(e){return console.error("Error fetching and transforming cloud data:",e),t.status(500).json({error:"Failed to fetch courses"})}}let l=(0,a.l)(n,"default"),d=(0,a.l)(n,"config"),m=new s.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/courses",pathname:"/api/courses",bundlePath:"",filename:""},userland:n})},8438:(e,t,i)=>{i.d(t,{Z:()=>s});let n=require("@prisma/client"),s=globalThis.prisma||new n.PrismaClient},7153:(e,t)=>{var i;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return i}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(i||(i={}))},1802:(e,t,i)=>{e.exports=i(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var i=t(t.s=5675);module.exports=i})();